{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item]\n      };\n    case \"REMOVE_FROM_BASKET\":\n      // Basket clone\n      let newBasket = [...state.basket];\n\n      // Checking if the item exists\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      if (index >= 0) {\n        // Item exists in basket, remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id}) as its not in the basket`);\n      }\n      // Return everything that the state had + the updated basket\n      return {\n        ...state,\n        basket: newBasket\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"sources":["/Users/imvk._/Downloads/amazon-main/src/reducer.js"],"sourcesContent":["export const initialState = {\n    basket: [],\n    user: null,\n  };\n  \n  export const getBasketTotal = (basket) =>\n    basket?.reduce((amount, item) => item.price + amount, 0);\n  \n  const reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n      case \"ADD_TO_BASKET\":\n        return {\n          ...state,\n          basket: [...state.basket, action.item],\n        };\n      case \"REMOVE_FROM_BASKET\":\n        // Basket clone\n        let newBasket = [...state.basket];\n  \n        // Checking if the item exists\n        const index = state.basket.findIndex(\n          (basketItem) => basketItem.id === action.id\n        );\n  \n        if (index >= 0) {\n          // Item exists in basket, remove it\n          newBasket.splice(index, 1);\n        } else {\n          console.warn(\n            `Cant remove product (id: ${action.id}) as its not in the basket`\n          );\n        }\n        // Return everything that the state had + the updated basket\n        return { ...state, basket: newBasket };\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;EACxBC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIF,MAAM,IACnCA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,MAAM,CAAC,CAACC,MAAM,EAAEC,IAAI,KAAKA,IAAI,CAACC,KAAK,GAAGF,MAAM,EAAE,CAAC,CAAC;AAE1D,MAAMG,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAK,eAAe;MAClB,OAAO;QACL,GAAGJ,KAAK;QACRR,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAM,EAAES,MAAM,CAACJ,IAAI;MACvC,CAAC;IACH,KAAK,oBAAoB;MACvB;MACA,IAAIQ,SAAS,GAAG,CAAC,GAAGL,KAAK,CAACR,MAAM,CAAC;;MAEjC;MACA,MAAMc,KAAK,GAAGN,KAAK,CAACR,MAAM,CAACe,SAAS,CACjCC,UAAU,IAAKA,UAAU,CAACC,EAAE,KAAKR,MAAM,CAACQ,EAAE,CAC5C;MAED,IAAIH,KAAK,IAAI,CAAC,EAAE;QACd;QACAD,SAAS,CAACK,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC5B,CAAC,MAAM;QACLJ,OAAO,CAACS,IAAI,CACT,4BAA2BV,MAAM,CAACQ,EAAG,4BAA2B,CAClE;MACH;MACA;MACA,OAAO;QAAE,GAAGT,KAAK;QAAER,MAAM,EAAEa;MAAU,CAAC;IACxC;MACE,OAAOL,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}