{"ast":null,"code":"import _toConsumableArray from\"/Users/imvk._/Downloads/amazon-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/imvk._/Downloads/amazon-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export var initialState={basket:[],user:null};export var getBasketTotal=function getBasketTotal(basket){return basket===null||basket===void 0?void 0:basket.reduce(function(amount,item){return item.price+amount;},0);};var reducer=function reducer(state,action){console.log(action);switch(action.type){case\"ADD_TO_BASKET\":return _objectSpread(_objectSpread({},state),{},{basket:[].concat(_toConsumableArray(state.basket),[action.item])});case\"REMOVE_FROM_BASKET\":// Basket clone\nvar newBasket=_toConsumableArray(state.basket);// Checking if the item exists\nvar index=state.basket.findIndex(function(basketItem){return basketItem.id===action.id;});if(index>=0){// Item exists in basket, remove it\nnewBasket.splice(index,1);}else{console.warn(\"Cant remove product (id: \".concat(action.id,\") as its not in the basket\"));}// Return everything that the state had + the updated basket\nreturn _objectSpread(_objectSpread({},state),{},{basket:newBasket});default:return state;}};export default reducer;","map":{"version":3,"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"sources":["/Users/imvk._/Downloads/amazon-main/src/reducer.js"],"sourcesContent":["export const initialState = {\n    basket: [],\n    user: null,\n  };\n  \n  export const getBasketTotal = (basket) =>\n    basket?.reduce((amount, item) => item.price + amount, 0);\n  \n  const reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n      case \"ADD_TO_BASKET\":\n        return {\n          ...state,\n          basket: [...state.basket, action.item],\n        };\n      case \"REMOVE_FROM_BASKET\":\n        // Basket clone\n        let newBasket = [...state.basket];\n  \n        // Checking if the item exists\n        const index = state.basket.findIndex(\n          (basketItem) => basketItem.id === action.id\n        );\n  \n        if (index >= 0) {\n          // Item exists in basket, remove it\n          newBasket.splice(index, 1);\n        } else {\n          console.warn(\n            `Cant remove product (id: ${action.id}) as its not in the basket`\n          );\n        }\n        // Return everything that the state had + the updated basket\n        return { ...state, basket: newBasket };\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;"],"mappings":"yPAAA,MAAO,IAAMA,aAAY,CAAG,CACxBC,MAAM,CAAE,EAAE,CACVC,IAAI,CAAE,IACR,CAAC,CAED,MAAO,IAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIF,MAAM,QACnCA,OAAM,SAANA,MAAM,iBAANA,MAAM,CAAEG,MAAM,CAAC,SAACC,MAAM,CAAEC,IAAI,QAAKA,KAAI,CAACC,KAAK,CAAGF,MAAM,GAAE,CAAC,CAAC,GAE1D,GAAMG,QAAO,CAAG,QAAVA,QAAO,CAAIC,KAAK,CAAEC,MAAM,CAAK,CACjCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CACnB,OAAQA,MAAM,CAACG,IAAI,EACjB,IAAK,eAAe,CAClB,sCACKJ,KAAK,MACRR,MAAM,8BAAMQ,KAAK,CAACR,MAAM,GAAES,MAAM,CAACJ,IAAI,EAAC,GAE1C,IAAK,oBAAoB,CACvB;AACA,GAAIQ,UAAS,oBAAOL,KAAK,CAACR,MAAM,CAAC,CAEjC;AACA,GAAMc,MAAK,CAAGN,KAAK,CAACR,MAAM,CAACe,SAAS,CAClC,SAACC,UAAU,QAAKA,WAAU,CAACC,EAAE,GAAKR,MAAM,CAACQ,EAAE,GAC5C,CAED,GAAIH,KAAK,EAAI,CAAC,CAAE,CACd;AACAD,SAAS,CAACK,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CAC5B,CAAC,IAAM,CACLJ,OAAO,CAACS,IAAI,oCACkBV,MAAM,CAACQ,EAAE,+BACtC,CACH,CACA;AACA,sCAAYT,KAAK,MAAER,MAAM,CAAEa,SAAS,GACtC,QACE,MAAOL,MAAK,CAAC,CAEnB,CAAC,CAED,cAAeD,QAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}